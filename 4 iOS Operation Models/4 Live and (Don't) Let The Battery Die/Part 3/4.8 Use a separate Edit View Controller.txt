4.8 Use a separate Edit View Controller


We've moved the locationField into ProfileEditViewController.m and created a UITextField @property so it can be accessed with self.locationField.

First, move the UITextFieldDelegate Protocol from ProfileViewController.h to ProfileEditViewController.h.

Next, move the textFieldShouldReturn: method from ProfileViewController.m to ProfileEditViewController.m.

Finally, re-assign the self.locationField delegate property to the instance of ProfileEditViewController.


ProfileViewController.h
#import <UIKit/UIKit.h>

@class User;

@interface ProfileViewController : UIViewController <UITextFieldDelegate>

@property (strong, nonatomic) User *user;
@property (strong, nonatomic) UIScrollView *scrollView;

- (void)fillProfileViews;

@end


ProfileViewController.m
#import "ProfileViewController.h"
#import "AFJSONRequestOperation.h"
#import "UIImageView+AFNetworking.h"
#import "User.h"
#import "Photo.h"

@implementation ProfileViewController

- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil
{
    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
    if (self) {
        self.title = @"Profile";
        self.tabBarItem.image = [UIImage imageNamed:@"tab_icon_profile"];
    }
    return self;
}

- (void)viewDidLoad
{
    [super viewDidLoad];

    self.view.backgroundColor = [UIColor whiteColor];
    
    self.scrollView = [[UIScrollView alloc] initWithFrame:self.view.bounds];
    self.scrollView.autoresizingMask = UIViewAutoresizingFlexibleHeight;
    self.scrollView.contentSize = CGSizeMake(320,520);
    
    
    [self.view addSubview:self.scrollView];

    self.user = [[User alloc] init];

    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(fillProfileViews) name:@"initWithJSONFinishedLoading" object:nil];
}

- (void)fillProfileViews
{
    UIImageView *profileImageView = [[UIImageView alloc] init];
    profileImageView.frame = CGRectMake(20, 20, 100, 114);
    
    [profileImageView setImageWithURL:[NSURL URLWithString:self.user.profilePhoto.filename] placeholderImage:[UIImage imageNamed:@"placeholder.jpg"]];

    [self.scrollView addSubview:profileImageView];
    
    UILabel *nameLabel = [[UILabel alloc] init];
    nameLabel.frame = CGRectMake(20,140,280,40);
    
    nameLabel.text = [NSString stringWithFormat:@"Name: %@ %@", self.user.firstName, self.user.lastName];
    
    [self.scrollView addSubview:nameLabel];
    
    UILabel *cityLabel = [[UILabel alloc] init];
    cityLabel.frame = CGRectMake(20,200,280,40);
    cityLabel.text = self.user.city;
    
    [self.scrollView addSubview:cityLabel];
    
    UITextView *biography = [[UITextView alloc] init];
    biography.frame = CGRectMake(12,260,300,180);
    biography.font = [UIFont fontWithName:@"Helvetica" size:17];
    biography.editable = NO;
    
    biography.text = self.user.biography;
    
    [self.scrollView addSubview:biography];
    
    UILabel *memberSinceLabel = [[UILabel alloc] init];
    memberSinceLabel.frame = CGRectMake(20,440,280,40);
    memberSinceLabel.text = self.user.memberSince;
    
    [self.scrollView addSubview:memberSinceLabel];
}

- (void)viewWillAppear:(BOOL)animated
{
}

- (BOOL)textFieldShouldReturn:(UITextField *)textField {
    self.user.location = textField.text;

    [textField resignFirstResponder];
    return YES;
}

@end


ProfileEditViewController.h
#import <UIKit/UIKit.h>

@class User;

@interface ProfileEditViewController : UIViewController /*//Move the delegate protocol here//*/

@property (strong, nonatomic) User *user;
@property (strong, nonatomic) UITextField *locationField;

@end


ProfileEditViewController.m
#import "ProfileEditViewController.h"
#import "User.h"

@implementation ProfileEditViewController

- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil
{
    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
    if (self) {
        self.title = @"Location Edit";
    }
    return self;
}

- (void)viewDidLoad
{
    [super viewDidLoad];

    self.locationField = [[UITextField alloc] init];
    self.locationField.frame = CGRectMake(20, 480, 280, 40);
    self.locationField.borderStyle = UITextBorderStyleBezel;
    self.locationField.keyboardType = UIKeyboardTypeDefault;
    self.locationField.text = self.user.location;
    /*//Re-assign the delegate property here//*/
    
    [self.view addSubview:self.locationField];
}

- (void)viewWillAppear:(BOOL)animated
{
    self.locationField.text = self.user.location;
}

/*//Move the textFieldShouldReturn: method here//*/

@end


Answer:
ProfileViewController.h
#import <UIKit/UIKit.h>

@class User;

@interface ProfileViewController : UIViewController 

@property (strong, nonatomic) User *user;
@property (strong, nonatomic) UIScrollView *scrollView;

- (void)fillProfileViews;

@end


ProfileViewController.m
#import "ProfileViewController.h"
#import "AFJSONRequestOperation.h"
#import "UIImageView+AFNetworking.h"
#import "User.h"
#import "Photo.h"

@implementation ProfileViewController

- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil
{
    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
    if (self) {
        self.title = @"Profile";
        self.tabBarItem.image = [UIImage imageNamed:@"tab_icon_profile"];
    }
    return self;
}

- (void)viewDidLoad
{
    [super viewDidLoad];

    self.view.backgroundColor = [UIColor whiteColor];
    
    self.scrollView = [[UIScrollView alloc] initWithFrame:self.view.bounds];
    self.scrollView.autoresizingMask = UIViewAutoresizingFlexibleHeight;
    self.scrollView.contentSize = CGSizeMake(320,520);
    
    
    [self.view addSubview:self.scrollView];

    self.user = [[User alloc] init];

    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(fillProfileViews) name:@"initWithJSONFinishedLoading" object:nil];
}

- (void)fillProfileViews
{
    UIImageView *profileImageView = [[UIImageView alloc] init];
    profileImageView.frame = CGRectMake(20, 20, 100, 114);
    
    [profileImageView setImageWithURL:[NSURL URLWithString:self.user.profilePhoto.filename] placeholderImage:[UIImage imageNamed:@"placeholder.jpg"]];

    [self.scrollView addSubview:profileImageView];
    
    UILabel *nameLabel = [[UILabel alloc] init];
    nameLabel.frame = CGRectMake(20,140,280,40);
    
    nameLabel.text = [NSString stringWithFormat:@"Name: %@ %@", self.user.firstName, self.user.lastName];
    
    [self.scrollView addSubview:nameLabel];
    
    UILabel *cityLabel = [[UILabel alloc] init];
    cityLabel.frame = CGRectMake(20,200,280,40);
    cityLabel.text = self.user.city;
    
    [self.scrollView addSubview:cityLabel];
    
    UITextView *biography = [[UITextView alloc] init];
    biography.frame = CGRectMake(12,260,300,180);
    biography.font = [UIFont fontWithName:@"Helvetica" size:17];
    biography.editable = NO;
    
    biography.text = self.user.biography;
    
    [self.scrollView addSubview:biography];
    
    UILabel *memberSinceLabel = [[UILabel alloc] init];
    memberSinceLabel.frame = CGRectMake(20,440,280,40);
    memberSinceLabel.text = self.user.memberSince;
    
    [self.scrollView addSubview:memberSinceLabel];
}

- (void)viewWillAppear:(BOOL)animated
{
}

@end


ProfileViewController.h
#import <UIKit/UIKit.h>

@class User;

@interface ProfileEditViewController : UIViewController <UITextFieldDelegate>

@property (strong, nonatomic) User *user;
@property (strong, nonatomic) UITextField *locationField;

@end


ProfileViewController.m
#import "ProfileEditViewController.h"
#import "User.h"

@implementation ProfileEditViewController

- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil
{
    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
    if (self) {
        self.title = @"Location Edit";
    }
    return self;
}

- (void)viewDidLoad
{
    [super viewDidLoad];

    self.locationField = [[UITextField alloc] init];
    self.locationField.frame = CGRectMake(20, 480, 280, 40);
    self.locationField.borderStyle = UITextBorderStyleBezel;
    self.locationField.keyboardType = UIKeyboardTypeDefault;
    self.locationField.text = self.user.location;
    
    self.locationField.delegate = self;
    [self.view addSubview:self.locationField];
}

- (void)viewWillAppear:(BOOL)animated
{
    self.locationField.text = self.user.location;
}

/*//Move the textFieldShouldReturn: method here//*/
- (BOOL)textFieldShouldReturn:(UITextField *)textField {
    self.user.location = textField.text;

    [textField resignFirstResponder];
    return YES;
}

@end