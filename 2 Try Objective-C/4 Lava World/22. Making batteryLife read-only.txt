22. Making batteryLife read-only


It's now time to update the batteryLife property to make it read-only. After you do that, make sure and update the decreaseBatteryLife: implementation to set the internal variable _batteryLife instead of self.batteryLife.


Example Use
#import "Apple.h"

Apple *talkingiPhone = [[Apple alloc] init];
talkingiPhone.phoneName = @"Mr. Higgie";

[talkingiPhone decreaseBatteryLife:@5];
[talkingiPhone reportBatteryLife];


Apple.m
#import "Apple.h"

@implementation Apple

- (void) decreaseBatteryLife:(NSNumber *)arg;
{
  self.batteryLife = @([self.batteryLife intValue] - [arg intValue]);
}

- (void) reportBatteryLife;
{
    NSLog(@"Battery life is %@", self.batteryLife);
}

- (NSString *)speak:(NSString *)greeting;
{
    NSString *message = [NSString stringWithFormat:@"%@ says %@", self.phoneName, greeting];
    return message;
}
@end


Apple.h
@interface Apple : NSObject

@property NSString *phoneName;
@property NSString *modelNumber;
@property NSNumber *batteryLife;

- (void) decreaseBatteryLife:(NSNumber *)arg;
- (NSString *) speak:(NSString *)greeting;
- (void) reportBatteryLife;
@end


Answer:
Apple.h
@interface Apple : NSObject

@property NSString *phoneName;
@property NSString *modelNumber;
@property (readonly) NSNumber *batteryLife;

- (void) decreaseBatteryLife:(NSNumber *)arg;
- (NSString *) speak:(NSString *)greeting;
- (void) reportBatteryLife;
@end


Apple.m
#import "Apple.h"

@implementation Apple

- (void) decreaseBatteryLife:(NSNumber *)arg;
{
  _batteryLife = @([self.batteryLife intValue] - [arg intValue]);
}

- (void) reportBatteryLife;
{
    NSLog(@"Battery life is %@", self.batteryLife);
}

- (NSString *)speak:(NSString *)greeting;
{
    NSString *message = [NSString stringWithFormat:@"%@ says %@", self.phoneName, greeting];
    return message;
}
@end


Output:
Apple.m[12]: Battery life is -5