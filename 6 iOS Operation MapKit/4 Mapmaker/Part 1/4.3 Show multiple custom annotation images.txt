4.3 Show multiple custom annotation images


It would be nice to be able to see which restaurants were cheap and which were expensive right on the map, so we've added another property to MapAnnotation.h called cost, and updated the dictionaries in self.restaurants to include data for that @"cost" key.

In mapView:viewForAnnotation:, write a conditional that checks the cost property of the annotation object singleAnnotation. If the cost is @"cheap", use the image cheap.png, and if it is @"expensive", use the image expensive.png.


RestaurantMapViewController.m
#import "RestaurantMapViewController.h"
#import "MapAnnotation.h"

@implementation RestaurantMapViewController

- (void)viewDidLoad
{
    [super viewDidLoad];
    
    self.theMap = [[MKMapView alloc] init];
    self.theMap.frame = CGRectMake(0, 0, 320, 300);
    self.theMap.delegate = self;
    self.theMap.scrollEnabled = YES;
    self.theMap.zoomEnabled = NO;

    [self.view addSubview:self.theMap];
    
    CLLocationCoordinate2D centerCoordinate = CLLocationCoordinate2DMake(28.539894, -81.381397);
    double regionWidth = 2200;
    double regionHeight = 2500;
    MKCoordinateRegion startRegion = MKCoordinateRegionMakeWithDistance(centerCoordinate, regionWidth, regionHeight);
    
    [self.theMap setRegion:startRegion
                  animated:YES];
    
    self.theMap.showsUserLocation = YES;
    
    self.userLocationLabel = [[UILabel alloc] initWithFrame:CGRectMake(20,360,280,40)];
    self.userLocationLabel.textAlignment = NSTextAlignmentCenter;
    self.userLocationLabel.font = [UIFont fontWithName:@"Helvetica" size:16.0f];
    self.userLocationLabel.text = @"lat: lng: ";
    
    [self.view addSubview:self.userLocationLabel];
    
    self.userCenterButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
    self.userCenterButton.frame = CGRectMake(20,320,280,40);
    [self.userCenterButton setTitle:@"center on user"
                           forState:UIControlStateNormal];
    [self.userCenterButton addTarget:self
                              action:@selector(centerOnUser:)
                    forControlEvents:UIControlEventTouchUpInside];
    [self.view addSubview:self.userCenterButton];
    
    self.restaurants = @[
        @{@"name": @"Taco Cantina", @"lat": @28.5424, @"lng": @-81.3841, @"contact": @"Mr. Green", @"cost": @"cheap"},
        @{@"name": @"Lou's", @"lat": @28.5336, @"lng": @-81.3735, @"contact": @"Surprisingly, not Lou", @"cost": @"expensive"},
        @{@"name": @"Mrs. Good Food", @"lat": @28.5451, @"lng": @-81.3514, @"contact": @"Sarah G. Food", @"cost": @"expensive"}
    ];
    
    for (NSDictionary *oneRestaurant in self.restaurants) {
        CLLocationCoordinate2D annotationCoordinate = CLLocationCoordinate2DMake([oneRestaurant[@"lat"] doubleValue], [oneRestaurant[@"lng"] doubleValue]);
        
        MapAnnotation *annotation = [[MapAnnotation alloc] init];
        annotation.coordinate = annotationCoordinate;
        annotation.title = oneRestaurant[@"name"];
        annotation.subtitle = oneRestaurant[@"contact"];
        annotation.cost = oneRestaurant[@"cost"];
        [self.theMap addAnnotation:annotation];
    }
    
}

- (void)centerOnUser:(id)sender
{
    [self.theMap setCenterCoordinate:self.theMap.userLocation.location.coordinate animated:YES];
}

- (void)mapView:(MKMapView *)mapView didUpdateUserLocation:(MKUserLocation *)userLocation
{
    if(self.userLocationUpdated == NO) {
        [self centerOnUser:nil];
        self.userLocationUpdated = YES;
    }
    
    self.userLocationLabel.text = [NSString stringWithFormat:@"user location: %f, %f", userLocation.location.coordinate.latitude, userLocation.location.coordinate.longitude];
}

- (void)mapView:(MKMapView *)mapView didSelectAnnotationView:(MKAnnotationView *)view
{
    [self.theMap setCenterCoordinate:[[view annotation] coordinate] animated:YES];
}

- (MKAnnotationView *)mapView:(MKMapView *)mapView viewForAnnotation:(id<MKAnnotation>)annotation
{
    if([annotation isKindOfClass:[MKUserLocation class]]) {
        return nil;
    }
    
    MKAnnotationView *view = [self.theMap dequeueReusableAnnotationViewWithIdentifier:@"annoView"];
    if(!view) {
        view = [[MKAnnotationView alloc] initWithAnnotation:annotation reuseIdentifier:@"annoView"];
    }
    
    MapAnnotation *singleAnnotation = annotation;
    
    /*//use singleAnnotation.cost to set the correct image on the view//*/
    
    view.canShowCallout = YES;
    
    return view;
}

@end


Answer:
RestaurantMapViewController.m
#import "RestaurantMapViewController.h"
#import "MapAnnotation.h"

@implementation RestaurantMapViewController

- (void)viewDidLoad
{
    [super viewDidLoad];
    
    self.theMap = [[MKMapView alloc] init];
    self.theMap.frame = CGRectMake(0, 0, 320, 300);
    self.theMap.delegate = self;
    self.theMap.scrollEnabled = YES;
    self.theMap.zoomEnabled = NO;

    [self.view addSubview:self.theMap];
    
    CLLocationCoordinate2D centerCoordinate = CLLocationCoordinate2DMake(28.539894, -81.381397);
    double regionWidth = 2200;
    double regionHeight = 2500;
    MKCoordinateRegion startRegion = MKCoordinateRegionMakeWithDistance(centerCoordinate, regionWidth, regionHeight);
    
    [self.theMap setRegion:startRegion
                  animated:YES];
    
    self.theMap.showsUserLocation = YES;
    
    self.userLocationLabel = [[UILabel alloc] initWithFrame:CGRectMake(20,360,280,40)];
    self.userLocationLabel.textAlignment = NSTextAlignmentCenter;
    self.userLocationLabel.font = [UIFont fontWithName:@"Helvetica" size:16.0f];
    self.userLocationLabel.text = @"lat: lng: ";
    
    [self.view addSubview:self.userLocationLabel];
    
    self.userCenterButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
    self.userCenterButton.frame = CGRectMake(20,320,280,40);
    [self.userCenterButton setTitle:@"center on user"
                           forState:UIControlStateNormal];
    [self.userCenterButton addTarget:self
                              action:@selector(centerOnUser:)
                    forControlEvents:UIControlEventTouchUpInside];
    [self.view addSubview:self.userCenterButton];
    
    self.restaurants = @[
        @{@"name": @"Taco Cantina", @"lat": @28.5424, @"lng": @-81.3841, @"contact": @"Mr. Green", @"cost": @"cheap"},
        @{@"name": @"Lou's", @"lat": @28.5336, @"lng": @-81.3735, @"contact": @"Surprisingly, not Lou", @"cost": @"expensive"},
        @{@"name": @"Mrs. Good Food", @"lat": @28.5451, @"lng": @-81.3514, @"contact": @"Sarah G. Food", @"cost": @"expensive"}
    ];
    
    for (NSDictionary *oneRestaurant in self.restaurants) {
        CLLocationCoordinate2D annotationCoordinate = CLLocationCoordinate2DMake([oneRestaurant[@"lat"] doubleValue], [oneRestaurant[@"lng"] doubleValue]);
        
        MapAnnotation *annotation = [[MapAnnotation alloc] init];
        annotation.coordinate = annotationCoordinate;
        annotation.title = oneRestaurant[@"name"];
        annotation.subtitle = oneRestaurant[@"contact"];
        annotation.cost = oneRestaurant[@"cost"];
        [self.theMap addAnnotation:annotation];
    }
    
}

- (void)centerOnUser:(id)sender
{
    [self.theMap setCenterCoordinate:self.theMap.userLocation.location.coordinate animated:YES];
}

- (void)mapView:(MKMapView *)mapView didUpdateUserLocation:(MKUserLocation *)userLocation
{
    if(self.userLocationUpdated == NO) {
        [self centerOnUser:nil];
        self.userLocationUpdated = YES;
    }
    
    self.userLocationLabel.text = [NSString stringWithFormat:@"user location: %f, %f", userLocation.location.coordinate.latitude, userLocation.location.coordinate.longitude];
}

- (void)mapView:(MKMapView *)mapView didSelectAnnotationView:(MKAnnotationView *)view
{
    [self.theMap setCenterCoordinate:[[view annotation] coordinate] animated:YES];
}

- (MKAnnotationView *)mapView:(MKMapView *)mapView viewForAnnotation:(id<MKAnnotation>)annotation
{
    if([annotation isKindOfClass:[MKUserLocation class]]) {
        return nil;
    }
    
    MKAnnotationView *view = [self.theMap dequeueReusableAnnotationViewWithIdentifier:@"annoView"];
    if(!view) {
        view = [[MKAnnotationView alloc] initWithAnnotation:annotation reuseIdentifier:@"annoView"];
    }
    
    MapAnnotation *singleAnnotation = annotation;
        
    if([singleAnnotation.cost isEqualToString:@"cheap"]) { 
      view.image = [UIImage imageNamed:@"cheap.png"];
    }
  	else {
       view.image = [UIImage imageNamed:@"expensive.png"];      
  	}
  
    view.canShowCallout = YES;
    
    return view;
}

@end