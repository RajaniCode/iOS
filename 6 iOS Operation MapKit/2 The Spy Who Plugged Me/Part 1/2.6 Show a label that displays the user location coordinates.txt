2.6 Show a label that displays the user location coordinates


There's a delegate method named mapView:didUpdateUserLocation: that runs every time the device updates the position of the user location shown by the blue location dot. We've added a UILabel to viewDidLoad named self.userLocationLabel to show the coordinates in the userLocation object.

In that delegate method, update the text property of self.userLocationLabel to display the lat/lng values that are in userLocation.location.coordinate


RestaurantMapViewController.h
#import <UIKit/UIKit.h>
#import <MapKit/MapKit.h>

@interface RestaurantMapViewController : UIViewController <MKMapViewDelegate>

@property (strong, nonatomic) MKMapView *theMap;
@property (strong, nonatomic) UILabel *userLocationLabel;

@end


RestaurantMapViewController.m   
#import "RestaurantMapViewController.h"

@implementation RestaurantMapViewController

- (void)viewDidLoad
{
    [super viewDidLoad];

    self.theMap = [[MKMapView alloc] init];
    self.theMap.frame = CGRectMake(0, 0, 320, 300);
    self.theMap.delegate = self;
    self.theMap.scrollEnabled = YES;
    self.theMap.zoomEnabled = NO;

    CLLocationCoordinate2D centerCoordinate = CLLocationCoordinate2DMake(28.41871, -81.58121);
    double regionWidth = 2200;
    double regionHeight = 2500;
    MKCoordinateRegion startRegion = MKCoordinateRegionMakeWithDistance(centerCoordinate, regionWidth, regionHeight);
    
    [self.theMap setRegion:startRegion
                  animated:YES];

    self.theMap.showsUserLocation = YES;
    
    [self.view addSubview:self.theMap];

    self.userLocationLabel = [[UILabel alloc] initWithFrame:CGRectMake(20,360,280,40)];
    self.userLocationLabel.textAlignment = NSTextAlignmentCenter;
    self.userLocationLabel.font = [UIFont fontWithName:@"Helvetica" size:16.0f];
    self.userLocationLabel.text = @"lat: lng: ";
    
    [self.view addSubview:self.userLocationLabel];
}

- (void)mapView:(MKMapView *)mapView didUpdateUserLocation:(MKUserLocation *)userLocation
{
    /*//Set the self.userLocationLabel text//*/
}


@end


Answer:
RestaurantMapViewController.m
#import "RestaurantMapViewController.h"

@implementation RestaurantMapViewController

- (void)viewDidLoad
{
    [super viewDidLoad];

    self.theMap = [[MKMapView alloc] init];
    self.theMap.frame = CGRectMake(0, 0, 320, 300);
    self.theMap.delegate = self;
    self.theMap.scrollEnabled = YES;
    self.theMap.zoomEnabled = NO;

    CLLocationCoordinate2D centerCoordinate = CLLocationCoordinate2DMake(28.41871, -81.58121);
    double regionWidth = 2200;
    double regionHeight = 2500;
    MKCoordinateRegion startRegion = MKCoordinateRegionMakeWithDistance(centerCoordinate, regionWidth, regionHeight);
    
    [self.theMap setRegion:startRegion
                  animated:YES];

    self.theMap.showsUserLocation = YES;
    
    [self.view addSubview:self.theMap];

    self.userLocationLabel = [[UILabel alloc] initWithFrame:CGRectMake(20,360,280,40)];
    self.userLocationLabel.textAlignment = NSTextAlignmentCenter;
    self.userLocationLabel.font = [UIFont fontWithName:@"Helvetica" size:16.0f];
    self.userLocationLabel.text = @"lat: lng: ";
    
    [self.view addSubview:self.userLocationLabel];
}

- (void)mapView:(MKMapView *)mapView didUpdateUserLocation:(MKUserLocation *)userLocation
{
  self.userLocationLabel.text = [NSString stringWithFormat:@"user location: %f, %f", userLocation.location.coordinate.latitude, userLocation.location.coordinate.longitude];
}
@end
