6.8 Add a distance key to the map data dictionaries


Update RestaurantsTableViewController.m's viewDidLoad method to calculate and add a @"distance" key/value to each dictionary in the self.restaurants NSArray. We're giving you some code to start, but you'll need to create the CLLocation object for each restaurant that will be used to calculate the distance between the restaurant and user.

Remember that you need to convert the lat/lng values in the restaurant NSDictionary to double values before you can use in the CLLocation initializer.

Also, pay attention to the new dictionary that we're logging out to see the updated keys/values.


RestaurantsTableViewController.m
#import "TestingAppDelegate.h"
#import "RestaurantMapViewController.h"

@implementation RestaurantsTableViewController

- (void)viewDidLoad
{
    [super viewDidLoad];
  
    UIButton *backButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
    backButton.frame = CGRectMake(20,360,280,40);
    [backButton setTitle:@"back" forState:UIControlStateNormal];
    [backButton addTarget:self action:@selector(goBack:) forControlEvents:UIControlEventTouchUpInside];
    [self.view addSubview:backButton];
    
    for (NSDictionary *restaurant in self.restaurants) {
        NSMutableDictionary *tempDictionary = [[NSMutableDictionary alloc] init];
        [tempDictionary addEntriesFromDictionary:restaurant];
        
        CLLocation *restaurantLocation = /*//Use initWithLatitude:longitude: to create the restaurantLocation CLLocation object//*/

        double distance = [restaurantLocation distanceFromLocation:self.location];
        
        [tempDictionary setObject:[NSNumber numberWithDouble:distance]
                           forKey:@"distance"];
        
        NSLog(@"%@",tempDictionary);
    }
}

#pragma mark - Table view data source

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    return self.restaurants.count;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:@"restaurantCell"];
    if(!cell) {
        cell = [[UITableViewCell alloc] initWithStyle:UITableViewCellStyleSubtitle reuseIdentifier:@"restaurantCell"];
    }
    
    cell.textLabel.text = self.restaurants[indexPath.row][@"name"];
    
    return cell;
}

- (void)goBack:(id)sender
{
    [self dismissViewControllerAnimated:YES completion:nil];
}

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    double latitude = [self.restaurants[indexPath.row][@"lat"] doubleValue];
    double longitude = [self.restaurants[indexPath.row][@"lng"] doubleValue];
    
    CLLocationCoordinate2D coordinate = CLLocationCoordinate2DMake(latitude, longitude);
    
    MKPlacemark *placemark = [[MKPlacemark alloc] initWithCoordinate:coordinate addressDictionary:nil];
    MKMapItem *mapItem = [[MKMapItem alloc] initWithPlacemark:placemark];
    
    mapItem.name = self.restaurants[indexPath.row][@"name"];
    
    [mapItem openInMapsWithLaunchOptions:@{MKLaunchOptionsDirectionsModeKey: MKLaunchOptionsDirectionsModeDriving}];
}

@end


Answer:
RestaurantsTableViewController.m
#import "TestingAppDelegate.h"
#import "RestaurantMapViewController.h"

@implementation RestaurantsTableViewController

- (void)viewDidLoad
{
    [super viewDidLoad];
  
    UIButton *backButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
    backButton.frame = CGRectMake(20,360,280,40);
    [backButton setTitle:@"back" forState:UIControlStateNormal];
    [backButton addTarget:self action:@selector(goBack:) forControlEvents:UIControlEventTouchUpInside];
    [self.view addSubview:backButton];
    
    for (NSDictionary *restaurant in self.restaurants) {
        NSMutableDictionary *tempDictionary = [[NSMutableDictionary alloc] init];
        [tempDictionary addEntriesFromDictionary:restaurant];
        
        CLLocation *restaurantLocation = [[CLLocation alloc] initWithLatitude:[restaurant[@"lat"] doubleValue] longitude:[restaurant[@"lng"] doubleValue]];
        
        double distance = [restaurantLocation distanceFromLocation:self.location];
        
        [tempDictionary setObject:[NSNumber numberWithDouble:distance]
                           forKey:@"distance"];
        
        NSLog(@"%@",tempDictionary);
    }
}

#pragma mark - Table view data source

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    return self.restaurants.count;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:@"restaurantCell"];
    if(!cell) {
        cell = [[UITableViewCell alloc] initWithStyle:UITableViewCellStyleSubtitle reuseIdentifier:@"restaurantCell"];
    }
    
    cell.textLabel.text = self.restaurants[indexPath.row][@"name"];
    
    return cell;
}

- (void)goBack:(id)sender
{
    [self dismissViewControllerAnimated:YES completion:nil];
}

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    double latitude = [self.restaurants[indexPath.row][@"lat"] doubleValue];
    double longitude = [self.restaurants[indexPath.row][@"lng"] doubleValue];
    
    CLLocationCoordinate2D coordinate = CLLocationCoordinate2DMake(latitude, longitude);
    
    MKPlacemark *placemark = [[MKPlacemark alloc] initWithCoordinate:coordinate addressDictionary:nil];
    MKMapItem *mapItem = [[MKMapItem alloc] initWithPlacemark:placemark];
    
    mapItem.name = self.restaurants[indexPath.row][@"name"];
    
    [mapItem openInMapsWithLaunchOptions:@{MKLaunchOptionsDirectionsModeKey: MKLaunchOptionsDirectionsModeDriving}];
}

@end