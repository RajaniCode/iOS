1.9 Open Apple Maps from a cell tap


Use the coordinate to create an MKPlacemark object, and use that placemark to create an MKMapItem.

Then, set the name property of the MKMapItem to the value of the corresponding @"name" key in self.locations, and send that MKMapItem the openInMapsWithLaunchOptions:nil message.


LocationsTableViewController.h
#import <UIKit/UIKit.h>
#import <MapKit/MapKit.h>

@interface LocationsTableViewController : UITableViewController

@property (strong, nonatomic) NSArray *locations;

@end


LocationsTableViewController.m
#import "LocationsTableViewController.h"

@implementation LocationsTableViewController

- (void)viewDidLoad
{
    [super viewDidLoad];
    self.locations = @[@{@"name": @"Taco Cantina", @"phoneNumber": @"407-555-3019", @"lat": @28.5464, @"lng": @-81.3844},
                       @{@"name": @"Lou's", @"phoneNumber": @"407-555-1212", @"lat": @28.5336, @"lng": @-81.3735}];
}

#pragma mark - Table view data source

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    return self.locations.count;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:@"locCell"];
    if(!cell) {
        cell = [[UITableViewCell alloc] initWithStyle:UITableViewCellStyleSubtitle reuseIdentifier:@"locCell"];
    }
    
    cell.textLabel.text = self.locations[indexPath.row][@"name"];
    cell.detailTextLabel.text = self.locations[indexPath.row][@"phoneNumber"];         
    cell.accessoryType = UITableViewCellAccessoryDetailDisclosureButton;
    
    return cell;
}

- (void)tableView:(UITableView *)tableView accessoryButtonTappedForRowWithIndexPath:(NSIndexPath *)indexPath
{
    double latitude = [self.locations[indexPath.row][@"lat"] doubleValue];
    double longitude = [self.locations[indexPath.row][@"lng"] doubleValue];
    CLLocationCoordinate2D coordinate = CLLocationCoordinate2DMake(latitude, longitude);

    /*//Create an MKPlacemark from the coordinate on the line above//*/

    /*//Create an MKMapItem from the placemark on the line above//*/

    /*//Set the name of the mapItem to the value in the name key of the locations array at indexPath.row//*/

    /*//Open the mapItem in Apple Maps//*/
}

@end
    

Answer:
LocationsTableViewController.m
#import "RestaurantsTableViewController.h"
#import "TestingAppDelegate.h"
#import "RestaurantMapViewController.h"

@implementation RestaurantsTableViewController

- (void)viewDidLoad
{
    [super viewDidLoad];
  
    UIButton *backButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
    backButton.frame = CGRectMake(20,360,280,40);
    [backButton setTitle:@"back" forState:UIControlStateNormal];
    [backButton addTarget:self action:@selector(goBack:) forControlEvents:UIControlEventTouchUpInside];
    [self.view addSubview:backButton];
    
    NSMutableArray *tempArray = [[NSMutableArray alloc] init];
    
    for (NSDictionary *restaurant in self.restaurants) {
        NSMutableDictionary *tempDictionary = [[NSMutableDictionary alloc] init];
        [tempDictionary addEntriesFromDictionary:restaurant];
        
        CLLocation *restaurantLocation = [[CLLocation alloc] initWithLatitude:[restaurant[@"lat"] doubleValue] longitude:[restaurant[@"lng"] doubleValue]];
        CLLocation *userLocation = [[CLLocation alloc] initWithLatitude:self.location.coordinate.latitude longitude:self.location.coordinate.longitude];
        
        double distance = [restaurantLocation distanceFromLocation:userLocation];
        
        [tempDictionary setObject:[NSNumber numberWithDouble:distance]
                           forKey:@"distance"];
        [tempArray addObject:tempDictionary];
    }
    self.restaurants = [[NSArray alloc] initWithArray:tempArray];
    [self.tableView reloadData];
}

#pragma mark - Table view data source

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    return self.restaurants.count;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:@"restaurantCell"];
    if(!cell) {
        cell = [[UITableViewCell alloc] initWithStyle:UITableViewCellStyleSubtitle reuseIdentifier:@"restaurantCell"];
    }
    
    cell.textLabel.text = self.restaurants[indexPath.row][@"name"];
    double distance = [self.restaurants[indexPath.row][@"distance"] doubleValue] * .001;
  	cell.detailTextLabel.text = [NSString stringWithFormat:@"%f kilometers away",distance];
    return cell;
}

- (void)goBack:(id)sender
{
    [self dismissViewControllerAnimated:YES completion:nil];
}

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    double latitude = [self.restaurants[indexPath.row][@"lat"] doubleValue];
    double longitude = [self.restaurants[indexPath.row][@"lng"] doubleValue];
    
    CLLocationCoordinate2D coordinate = CLLocationCoordinate2DMake(latitude, longitude);
    
    MKPlacemark *placemark = [[MKPlacemark alloc] initWithCoordinate:coordinate addressDictionary:nil];
    MKMapItem *mapItem = [[MKMapItem alloc] initWithPlacemark:placemark];
    
    mapItem.name = self.restaurants[indexPath.row][@"name"];
    [mapItem openInMapsWithLaunchOptions:@{MKLaunchOptionsDirectionsModeKey: MKLaunchOptionsDirectionsModeDriving}];
}

@end